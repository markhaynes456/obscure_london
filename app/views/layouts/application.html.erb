<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>LDN Attraction</title>
<meta name="viewport" content="width=device-width, initial-scale=1">



<%= stylesheet_link_tag "application", :media => "all" %>
<link rel="stylesheet" href="http://code.jquery.com/mobile/1.4.5/jquery.mobile.structure-1.4.5.min.css" />
<script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
<script src="http://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>
<style type="text/css">
		.addBuffer{ margin-bottom:20px; }
		html{ height:100%; }
		body{ height:100%; }
		#map{ height:100%; }
		#mapContent{ height:80%; }
		#map-canvas{ height:70%; width:100%; }
	</style>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
</head>
<body>
<script>
	$( document ).bind( 'mobileinit', function(){
	  $.mobile.loader.prototype.options.text = "loading";
	  $.mobile.loader.prototype.options.textVisible = false;
	  $.mobile.loader.prototype.options.theme = "a";
	  $.mobile.loader.prototype.options.html = "";
	});
</script>

<%= yield %>

</body>
<script type="text/javascript">
	/*
		I tried to keep my Javascript as tidy as possible by reading values in from XML into 
		my Arrays Contents and address so that I can make a clear separation between Javascript and XSLT.
		This aims to make my code easier to maintain.
	*/
	/*
		Edited code from Google Maps Documentation to produce the map shown in my application
		https://developers.google.com/maps/documentation/javascript/
	*/
	var map;
	var geocoder;
	var directionsDisplay;
	var directionsService = new google.maps.DirectionsService();
	var contents = ['London Eye','Big Ben','Tower Bridge','Imperial War Museum','Oxford Circus'];
	var address = ['EDF London EyeSE17PB','Bridge StreetSW1A0AA','Tower BridgeSE12AA','Lambeth RdSE16HZ','222 Oxford StreetW1C1DD'];
	/*
		Initialise my map to London approximately.
		Edited code from Google Map Documents
		https://developers.google.com/maps/documentation/javascript/
	*/
	  function initialize() {
		directionsDisplay = new google.maps.DirectionsRenderer();
		geocoder = new google.maps.Geocoder();
		var latlng = new google.maps.LatLng(51.5072, 0.1275);
		var mapOptions = {
		  zoom: 13,
		  center: latlng,
		  mapTypeId: google.maps.MapTypeId.ROADMAP
		};
		map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
		directionsDisplay.setMap(map);
	  }
	var myinfowindow = [];
	/*
		codeAddress works by scanning address[] and content[] and turning them
		into markers on a map with information in them.
	*/
	  function codeAddress() {
		var count=0;
		for(var i = 0; i < address.length; i++){
		geocoder.geocode( { 'address': address[i]}, function(results, status) {
		  if (status == google.maps.GeocoderStatus.OK) {
			map.setCenter(results[0].geometry.location);
		myinfowindow[i] = new google.maps.InfoWindow({
		content: contents[count++]
	});
		   var mark = new google.maps.Marker({
				map: map,
				position: results[0].geometry.location,
				infowindow: myinfowindow[i]
			});
		   google.maps.event.addListener(mark, 'click', function() {
			this.infowindow.open(map, mark);
	});
		  } else {
			alert("Geocode was not successful for the following reason: " + status);
		  }
		});
		}
	  }
	/*
		calcRoute is a funtion which takes the users current location 
		and displays how they should navigate to the there chosen destination.
	*/
	function calcRoute() {
	  var start = currentLocation;
	  var end = goTo.value;
	  var request = {
		origin:start,
		destination:end,
		travelMode: google.maps.TravelMode.DRIVING
	  };
	  directionsService.route(request, function(result, status) {
		if (status == google.maps.DirectionsStatus.OK) {
		  directionsDisplay.setDirections(result);
		}
	  });
	}
	/*
		get Location takes the users location and places them on the map
	*/
	function getLocation(){
	  if(navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(function(position) {
		  pos = new google.maps.LatLng(position.coords.latitude,
										   position.coords.longitude);
		  codeLatLng();
		  map.setCenter(pos);
		}, function() {
		  handleNoGeolocation(true);
		});
	  } else {
		// Browser doesn't support Geolocation
		handleNoGeolocation(false);
	  }
	}
	/*
		turns a latlng into an marker and places it on the map
	*/
	 function codeLatLng() {
		var input = pos;
		var lat = pos.lat();
		var lng = pos.lng();
		var latlng = new google.maps.LatLng(lat, lng);
		geocoder.geocode({'latLng': latlng}, function(results, status) {

		  if (status == google.maps.GeocoderStatus.OK) {
			if (results[1]) {
			  currentLocation = results[1].formatted_address;
			  map.setZoom(11);
			  marker = new google.maps.Marker({
				  position: latlng,
				  map: map
			  });
			}
		  } else {
			alert("Geocoder failed due to: " + status);
		  }
		});
	  }

	var getLocationBtn = document.getElementById('LocationBtn');
	var goToList = document.getElementById('goTo');
	/*
		Creates a drop down menu so that users can choose a location to navigate to
	*/
	for(var i = 0; i < address.length; i++){
	  var optionElem=document.createElement("option");
	  var content =document.createTextNode(address[i]);
	   optionElem.appendChild(content);
	   optionElem.value=address[i];
	   goToList.appendChild(optionElem);
	}
	/*
		The event Listeners I set up to run my functions.
	*/
	google.maps.event.addDomListener(window, 'load', initialize);
	google.maps.event.addDomListener(window, 'load', codeAddress);
	google.maps.event.addDomListener(getLocationBtn, 'click', getLocation);
	google.maps.event.addDomListener(goToList, 'change', calcRoute);
</script>
</html>
